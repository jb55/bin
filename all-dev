#!/usr/bin/env bash

export RUST_CHANNEL=stable
#export RUST_SRC_PATH="$(nix-build '<nixpkgs>' --no-out-link -A rustChannels.$RUST_CHANNEL.rust-src)"/lib/rustlib/src/rust/src
# texlive.combined.scheme-full \

export LIBCLANG_PATH="$(nix-build '<nixpkgs>' --no-out-link -A llvmPackages.libclang)/lib"

#     cargo-bloat \
     #rustChannels.$RUST_CHANNEL.clippy-preview \
     #rustChannels.$RUST_CHANNEL.rust \
     #rustracer \

exec nix-shell -p \
     llvmPackages.libclang clang stdenv.cc.libc pango gdk_pixbuf \
     asciidoc \
     autoconf \
     secp256k1 \
     autogen \
     automake \
     bison \
     cairo \
     cppcheck \
     elmPackages.elm \
     flex \
     gdb \
     git \
     glfw \
     glib \
     gmp \
     gtk3 \
     haskellEnv \
     imagemagick \
     libappindicator \
     libgit2 \
     libical.{dev,out} \
     librsvg \
     libtool \
     libxml2 \
     mesa_noglu \
     nodejs \
     dotnet-sdk \
     obs-studio \
     rocksdb \
     openssl.dev \
     pkgconfig \
     stdenv \
     'python3.withPackages (p: with p; [bitcoinlib mako cheroot sphinx pytest-forked pytest_xdist pytest ephemeral_port_reserve flask flaky flake8 xlib])' \
     qrencode \
     SDL2 \
     sqlite \
     tor \
     valgrind.dev \
     xorg.libX11.{man,dev} \
     xorg.libXft \
     zlib \
     "$@"
